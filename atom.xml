<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>麦田的博客</title>
  
  <subtitle>麦田博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-02T07:32:31.718Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>麦田里的守望者</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/07/02/RESTful%E9%A3%8E%E6%A0%BC/"/>
    <id>http://yoursite.com/2019/07/02/RESTful风格/</id>
    <published>2019-07-02T06:19:36.320Z</published>
    <updated>2019-07-02T07:32:31.718Z</updated>
    
    <content type="html"><![CDATA[<center>RESTful风格</center>===<ol><li>什么是RESTful风格</li></ol><hr><p>对应的中文是rest式的;Restful web service是一种常见的rest的应用,是遵守了rest风格的web服务;rest式的web服务是一种ROA(The Resource-Oriented Architecture)(面向资源的架构).</p><ol start="2"><li>RESTful的用法</li></ol><hr><p><a href="http://127.0.0.1/user/1" target="_blank" rel="noopener">http://127.0.0.1/user/1</a> GET  根据用户id查询用户数据<br><a href="http://127.0.0.1/user" target="_blank" rel="noopener">http://127.0.0.1/user</a>  POST 新增用户<br><a href="http://127.0.0.1/user" target="_blank" rel="noopener">http://127.0.0.1/user</a>  PUT 修改用户信息<br><a href="http://127.0.0.1/user" target="_blank" rel="noopener">http://127.0.0.1/user</a>  DELETE 删除用户信息<br><img src="/home/picture/1.png" alt="avatar"></p><h2 id="3-在Springboot当中使用"><a href="#3-在Springboot当中使用" class="headerlink" title="3.在Springboot当中使用"></a>3.在Springboot当中使用</h2><pre><code>@RestController@RequestMapping(&quot;/base_notice&quot;)public class NoticeController {/** * 获取所有公告 * * @throws * @author Wangshihao * @date 2019/6/5 9:19 */@GetMapping(&quot;/notices&quot;)public String baseUserList(HttpServletRequest request, HttpServletResponseresponse, Integer currPage, Integer pageSize) {return &quot;noticeList&quot;;}/** * 新增公告 * * @throws * @author Wangshihao * @date 2019/6/5 9:29 */@PostMapping(&quot;/addnotice&quot;)public JSONObject sysUserAdd(BasNotice basNotice, @RequestParam(value = &quot;fileArray&quot;) MultipartFile[] fileArray, HttpServletRequest request, HttpServletResponse response) {JSONObject jObject = new JSONObject();return jObject;}/** * 根据id查询公告信息 * * @throws * @author Wangshihao * @date 2019/6/5 10:07 */@PostMapping(&quot;/notice&quot;)public BasNoticeDTO findOne(String id) {BasNoticeDTO basNoticeDTO = noticeService.getBaseNoticeById(id);return basNoticeDTO;}/** * 编辑公告 * * @throws * @author Wangshihao * @date 2019/6/5 10:03 */@RequestMapping(&quot;/updatenotice&quot;)public JSONObject findOne(HttpServletRequest request, HttpServletResponse response, BasNotice basNotice, @RequestParam(value = &quot;fileArray&quot;, required = false) MultipartFile[] fileArray, @RequestParam(&quot;removeFiles&quot;) Long[] removeFiles) {JSONObject jObject = new JSONObject();return jObject;}/** * 删除公告及附件 * * @throws * @author Wangshihao * @date 2019/6/5 10:17 */@DeleteMapping(&quot;/deletenotices&quot;)public JSONObject deleteBaseUser(@RequestBody List&lt;Long&gt; ids) {JSONObject jObject = new JSONObject();return jObject;}/** * 显示 * * @throws * @author Wangshihao * @date 2019/6/12 19:11 */@PostMapping(&quot;/shownotices&quot;)public JSONObject shownotices(@RequestBody List&lt;Long&gt; ids) {JSONObject jObject = new JSONObject();return jObject;}}</code></pre><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;RESTful风格&lt;/center&gt;
===

&lt;ol&gt;
&lt;li&gt;什么是RESTful风格&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;对应的中文是rest式的;Restful web service是一种常见的rest的应用,是遵守了rest风格的web服务;rest式的web服务是一种ROA(The Resource-Oriented Architecture)(面向资源的架构).&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;RESTful的用法&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1/user/1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user/1&lt;/a&gt; GET  根据用户id查询用户数据&lt;br&gt;&lt;a href=&quot;http://127.0.0.1/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user&lt;/a&gt;  POST 新增用户&lt;br&gt;&lt;a href=&quot;http://127.0.0.1/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user&lt;/a&gt;  PUT 修改用户信息&lt;br&gt;&lt;a href=&quot;http://127.0.0.1/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user&lt;/a&gt;  DELETE 删除用户信息&lt;br&gt;&lt;img src=&quot;/home/picture/1.png&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-在Springboot当中使用&quot;&gt;&lt;a href=&quot;#3-在Springboot当中使用&quot; class=&quot;headerlink&quot; title=&quot;3.在Springboot当中使用&quot;&gt;&lt;/a&gt;3.在Springboot当中使用&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;@RestController
@RequestMapping(&amp;quot;/base_notice&amp;quot;)
public class NoticeController {
/**
 * 获取所有公告
 *
 * @throws
 * @author Wangshihao
 * @date 2019/6/5 9:19
 */
@GetMapping(&amp;quot;/notices&amp;quot;)
public String baseUserList(HttpServletRequest request,
 HttpServletResponseresponse, Integer currPage, Integer pageSize) {
return &amp;quot;noticeList&amp;quot;;
}


/**
 * 新增公告
 *
 * @throws
 * @author Wangshihao
 * @date 2019/6/5 9:29
 */
@PostMapping(&amp;quot;/addnotice&amp;quot;)
public JSONObject sysUserAdd(BasNotice basNotice, @RequestParam(value = &amp;quot;fileArray&amp;quot;) MultipartFile[] fileArray, HttpServletRequest request, HttpServletResponse response) {
JSONObject jObject = new JSONObject();
return jObject;
}


/**
 * 根据id查询公告信息
 *
 * @throws
 * @author Wangshihao
 * @date 2019/6/5 10:07
 */
@PostMapping(&amp;quot;/notice&amp;quot;)
public BasNoticeDTO findOne(String id) {
BasNoticeDTO basNoticeDTO = noticeService.getBaseNoticeById(id);
return basNoticeDTO;
}


/**
 * 编辑公告
 *
 * @throws
 * @author Wangshihao
 * @date 2019/6/5 10:03
 */
@RequestMapping(&amp;quot;/updatenotice&amp;quot;)
public JSONObject findOne(HttpServletRequest request, HttpServletResponse response, BasNotice basNotice, @RequestParam(value = &amp;quot;fileArray&amp;quot;, required = false) MultipartFile[] fileArray, @RequestParam(&amp;quot;removeFiles&amp;quot;) Long[] removeFiles) {
JSONObject jObject = new JSONObject();
return jObject;
}


/**
 * 删除公告及附件
 *
 * @throws
 * @author Wangshihao
 * @date 2019/6/5 10:17
 */
@DeleteMapping(&amp;quot;/deletenotices&amp;quot;)
public JSONObject deleteBaseUser(@RequestBody List&amp;lt;Long&amp;gt; ids) {
JSONObject jObject = new JSONObject();
return jObject;
}


/**
 * 显示
 *
 * @throws
 * @author Wangshihao
 * @date 2019/6/12 19:11
 */
@PostMapping(&amp;quot;/shownotices&amp;quot;)
public JSONObject shownotices(@RequestBody List&amp;lt;Long&amp;gt; ids) {
JSONObject jObject = new JSONObject();
return jObject;
}
}&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>这是我的第一篇博客啊</title>
    <link href="http://yoursite.com/2019/07/02/%E8%BF%99%E6%98%AF%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%95%8A/"/>
    <id>http://yoursite.com/2019/07/02/这是我的第一篇博客啊/</id>
    <published>2019-07-02T03:22:34.000Z</published>
    <updated>2019-07-02T03:22:34.950Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
