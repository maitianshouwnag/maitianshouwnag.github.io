<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>麦田的博客</title>
  
  <subtitle>麦田博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-09T06:41:13.291Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>麦田里的守望者</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot简介</title>
    <link href="http://yoursite.com/2019/07/05/SpringBoot%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2019/07/05/SpringBoot简介/</id>
    <published>2019-07-05T06:44:19.000Z</published>
    <updated>2019-07-09T06:41:13.291Z</updated>
    
    <content type="html"><![CDATA[<p>###1）SpringBoot是什么？SpringBoot的优点？如何使用？<br><strong>SpringBoot是什么：</strong></p><p>Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域成为领导者。  </p><p><strong>Spring Boot的优点：</strong>  </p><ol><li>方便对外输出各种形式的服务，如 REST API、WebSocket、Web、Streaming、Tasks</li><li>非常简洁的安全策略集成</li><li>支持关系数据库和非关系数据库</li><li>支持运行期内嵌容器，如 Tomcat、Jetty</li><li>强大的开发包，支持热启动</li><li>自动管理依赖</li><li>自带应用监控</li><li>支持各种 IED，如 IntelliJ IDEA 、NetBeans</li></ol><p>###2）Spring Boot 的配置文件有哪几种格式？它们有什么区别？<br><strong>两种格式：</strong><br>.properties 和 .yml，它们的区别主要是书写格式不同。<br>1）.properties  </p><pre><code>app.user.name = javastack</code></pre><a id="more"></a><p>2）.yml  </p><p><code>app:      user:        name: javastack</code></p><p>在.yml文件中书写注意：  </p><ol><li>在不同“等级”用冒号隔开  </li><li>次等级的前面是空格，不能使用制表符(tab)    </li><li>冒号之后如果有值，那么冒号和值之间至少有一个空格  </li></ol><p>###3）Sping Boot的核心注解是哪个？<br>启动类上面的注解是@SpringBootApplication，它也是 Spring Boot 的核心注解，主要组合包含了以下 3 个注解：<br><code>@SpringBootConfiguration：</code>组合了 @Configuration 注解，实现配置文件的功能。<br><code>@EnableAutoConfiguration：</code>打开自动配置的功能，也可以关闭某个自动配置的选项，如关闭数据源自动配置功能： @SpringBootApplication(exclude = { DataSourceAutoConfiguration.class })。<br><code>@ComponentScan：</code>Spring组件扫描。  </p><p>###4）Spring Boot 2.X 有什么新特性？与 1.X 有什么区别？<br>配置变更<br>JDK 版本升级<br>第三方类库升级<br>响应式 Spring 编程支持<br>HTTP/2 支持<br>配置属性绑定<br>更多改进与加强…  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;###1）SpringBoot是什么？SpringBoot的优点？如何使用？&lt;br&gt;&lt;strong&gt;SpringBoot是什么：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域成为领导者。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Spring Boot的优点：&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;方便对外输出各种形式的服务，如 REST API、WebSocket、Web、Streaming、Tasks&lt;/li&gt;
&lt;li&gt;非常简洁的安全策略集成&lt;/li&gt;
&lt;li&gt;支持关系数据库和非关系数据库&lt;/li&gt;
&lt;li&gt;支持运行期内嵌容器，如 Tomcat、Jetty&lt;/li&gt;
&lt;li&gt;强大的开发包，支持热启动&lt;/li&gt;
&lt;li&gt;自动管理依赖&lt;/li&gt;
&lt;li&gt;自带应用监控&lt;/li&gt;
&lt;li&gt;支持各种 IED，如 IntelliJ IDEA 、NetBeans&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;###2）Spring Boot 的配置文件有哪几种格式？它们有什么区别？&lt;br&gt;&lt;strong&gt;两种格式：&lt;/strong&gt;&lt;br&gt;.properties 和 .yml，它们的区别主要是书写格式不同。&lt;br&gt;1）.properties  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;app.user.name = javastack&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Spring Boot" scheme="http://yoursite.com/categories/Spring-Boot/"/>
    
    
  </entry>
  
  <entry>
    <title>RESTful风格</title>
    <link href="http://yoursite.com/2019/07/05/RESTful%E9%A3%8E%E6%A0%BC/"/>
    <id>http://yoursite.com/2019/07/05/RESTful风格/</id>
    <published>2019-07-05T02:50:20.000Z</published>
    <updated>2019-07-05T02:57:42.863Z</updated>
    
    <content type="html"><![CDATA[<ol><li>什么是RESTful风格</li></ol><hr><p>对应的中文是rest式的;Restful web service是一种常见的rest的应用,是遵守了rest风格的web服务;rest式的web服务是一种ROA(The Resource-Oriented Architecture)(面向资源的架构).</p><ol start="2"><li>RESTful的用法</li></ol><hr><p><a href="http://127.0.0.1/user/1" target="_blank" rel="noopener">http://127.0.0.1/user/1</a> GET  根据用户id查询用户数据<br><a href="http://127.0.0.1/user" target="_blank" rel="noopener">http://127.0.0.1/user</a>  POST 新增用户<br><a href="http://127.0.0.1/user" target="_blank" rel="noopener">http://127.0.0.1/user</a>  PUT 修改用户信息<br><a href="http://127.0.0.1/user" target="_blank" rel="noopener">http://127.0.0.1/user</a>  DELETE 删除用户信息<br><img src="clipboard.png" alt="avatar"></p><a id="more"></a><h2 id="3-在Springboot当中使用"><a href="#3-在Springboot当中使用" class="headerlink" title="3.在Springboot当中使用"></a>3.在Springboot当中使用</h2><pre><code>@RestController@RequestMapping(&quot;/base_notice&quot;)public class NoticeController {/** * 获取所有公告 * * @throws * @author Wangshihao * @date 2019/6/5 9:19 */@GetMapping(&quot;/notices&quot;)public String baseUserList(HttpServletRequest request, HttpServletResponseresponse, Integer currPage, Integer pageSize) {return &quot;noticeList&quot;;}/** * 新增公告 * * @throws * @author Wangshihao * @date 2019/6/5 9:29 */@PostMapping(&quot;/addnotice&quot;)public JSONObject sysUserAdd(BasNotice basNotice, @RequestParam(value = &quot;fileArray&quot;) MultipartFile[] fileArray, HttpServletRequest request, HttpServletResponse response) {JSONObject jObject = new JSONObject();return jObject;}/** * 根据id查询公告信息 * * @throws * @author Wangshihao * @date 2019/6/5 10:07 */@PostMapping(&quot;/notice&quot;)public BasNoticeDTO findOne(String id) {BasNoticeDTO basNoticeDTO = noticeService.getBaseNoticeById(id);return basNoticeDTO;}/** * 编辑公告 * * @throws * @author Wangshihao * @date 2019/6/5 10:03 */@RequestMapping(&quot;/updatenotice&quot;)public JSONObject findOne(HttpServletRequest request, HttpServletResponse response, BasNotice basNotice, @RequestParam(value = &quot;fileArray&quot;, required = false) MultipartFile[] fileArray, @RequestParam(&quot;removeFiles&quot;) Long[] removeFiles) {JSONObject jObject = new JSONObject();return jObject;}/** * 删除公告及附件 * * @throws * @author Wangshihao * @date 2019/6/5 10:17 */@DeleteMapping(&quot;/deletenotices&quot;)public JSONObject deleteBaseUser(@RequestBody List&lt;Long&gt; ids) {JSONObject jObject = new JSONObject();return jObject;}/** * 显示 * * @throws * @author Wangshihao * @date 2019/6/12 19:11 */@PostMapping(&quot;/shownotices&quot;)public JSONObject shownotices(@RequestBody List&lt;Long&gt; ids) {JSONObject jObject = new JSONObject();return jObject;}}</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;什么是RESTful风格&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;对应的中文是rest式的;Restful web service是一种常见的rest的应用,是遵守了rest风格的web服务;rest式的web服务是一种ROA(The Resource-Oriented Architecture)(面向资源的架构).&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;RESTful的用法&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&quot;http://127.0.0.1/user/1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user/1&lt;/a&gt; GET  根据用户id查询用户数据&lt;br&gt;&lt;a href=&quot;http://127.0.0.1/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user&lt;/a&gt;  POST 新增用户&lt;br&gt;&lt;a href=&quot;http://127.0.0.1/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user&lt;/a&gt;  PUT 修改用户信息&lt;br&gt;&lt;a href=&quot;http://127.0.0.1/user&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://127.0.0.1/user&lt;/a&gt;  DELETE 删除用户信息&lt;br&gt;&lt;img src=&quot;clipboard.png&quot; alt=&quot;avatar&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>这是我的第一篇博客啊</title>
    <link href="http://yoursite.com/2019/07/02/%E8%BF%99%E6%98%AF%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%E5%95%8A/"/>
    <id>http://yoursite.com/2019/07/02/这是我的第一篇博客啊/</id>
    <published>2019-07-02T03:22:34.000Z</published>
    <updated>2019-07-02T03:22:34.950Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
